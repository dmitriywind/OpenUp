// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iPractice.DataAccess.Entity;

namespace iPractice.DataAccess.Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("ClientEntityPsychologistEntity", b =>
                {
                    b.Property<long>("ClientsId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PsychologistsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClientsId", "PsychologistsId");

                    b.HasIndex("PsychologistsId");

                    b.ToTable("ClientEntityPsychologistEntity");
                });

            modelBuilder.Entity("iPractice.DataAccess.Entity.Models.ClientBookedTimeSlotEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("From")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PsychologistId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("PsychologistId");

                    b.ToTable("ClientsBookedTimeSlots");
                });

            modelBuilder.Entity("iPractice.DataAccess.Entity.Models.ClientEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("iPractice.DataAccess.Entity.Models.PsychologistAvailabilityEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("From")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PsychologistId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PsychologistId");

                    b.ToTable("PsychologistAvailabilities");
                });

            modelBuilder.Entity("iPractice.DataAccess.Entity.Models.PsychologistEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Psychologists");
                });

            modelBuilder.Entity("ClientEntityPsychologistEntity", b =>
                {
                    b.HasOne("iPractice.DataAccess.Entity.Models.ClientEntity", null)
                        .WithMany()
                        .HasForeignKey("ClientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("iPractice.DataAccess.Entity.Models.PsychologistEntity", null)
                        .WithMany()
                        .HasForeignKey("PsychologistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iPractice.DataAccess.Entity.Models.ClientBookedTimeSlotEntity", b =>
                {
                    b.HasOne("iPractice.DataAccess.Entity.Models.ClientEntity", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("iPractice.DataAccess.Entity.Models.PsychologistEntity", "Psychologist")
                        .WithMany()
                        .HasForeignKey("PsychologistId");

                    b.Navigation("Client");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("iPractice.DataAccess.Entity.Models.PsychologistAvailabilityEntity", b =>
                {
                    b.HasOne("iPractice.DataAccess.Entity.Models.PsychologistEntity", "Psychologist")
                        .WithMany()
                        .HasForeignKey("PsychologistId");

                    b.Navigation("Psychologist");
                });
#pragma warning restore 612, 618
        }
    }
}
